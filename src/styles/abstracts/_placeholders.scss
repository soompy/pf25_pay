// ==========================================================================
// PLACEHOLDERS
// ==========================================================================
// Reusable style patterns using @extend

// Typography Placeholders
// ==========================================================================
%heading-base {
  font-family: $font-primary;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: $text-primary;
  margin: 0;
}

%body-text {
  font-family: $font-primary;
  font-weight: $font-weight-normal;
  line-height: $line-height-normal;
  color: $text-primary;
  margin: 0;
}

%small-text {
  font-size: $font-size-sm;
  color: $text-secondary;
  line-height: $line-height-normal;
}

%label-text {
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  color: $text-primary;
  margin-bottom: $spacing-1;
}

// Layout Placeholders
// ==========================================================================
%container {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $spacing-4;
  
  @include respond-to(sm) {
    padding: 0 $spacing-6;
  }
  
  @include respond-to(lg) {
    padding: 0 $spacing-8;
  }
}

%section-padding {
  padding: $spacing-16 0;
  
  @include respond-to(md) {
    padding: $spacing-20 0;
  }
  
  @include respond-to(lg) {
    padding: $spacing-24 0;
  }
}

%full-width {
  width: 100%;
  max-width: none;
}

%center-content {
  @include flex-center;
}

// Button Placeholders
// ==========================================================================
%btn-base {
  @include button-base;
  @include button-size($spacing-3, $spacing-4, $font-size-base);
}

%btn-primary {
  @extend %btn-base;
  @include button-variant($color-primary, $color-white);
}

%btn-secondary {
  @extend %btn-base;
  @include button-variant($color-secondary, $color-white);
}

%btn-outline {
  @extend %btn-base;
  background-color: transparent;
  color: $color-primary;
  border: 1px solid $color-primary;
  
  &:hover:not(:disabled) {
    background-color: $color-primary;
    color: $color-white;
  }
}

%btn-ghost {
  @extend %btn-base;
  background-color: transparent;
  color: $text-primary;
  
  &:hover:not(:disabled) {
    background-color: $color-gray-100;
  }
}

// Form Placeholders
// ==========================================================================
%input-base {
  @include input-base;
}

%input-error {
  border-color: $color-error;
  
  &:focus {
    border-color: $color-error;
    box-shadow: 0 0 0 3px rgba($color-error, 0.1);
  }
}

%input-success {
  border-color: $color-success;
  
  &:focus {
    border-color: $color-success;
    box-shadow: 0 0 0 3px rgba($color-success, 0.1);
  }
}

%form-group {
  margin-bottom: $spacing-4;
  
  label {
    @extend %label-text;
    display: block;
  }
  
  .error-message {
    @extend %small-text;
    color: $color-error;
    margin-top: $spacing-1;
  }
  
  .help-text {
    @extend %small-text;
    margin-top: $spacing-1;
  }
}

// Card Placeholders
// ==========================================================================
%card-base {
  @include card-base;
  padding: $spacing-6;
}

%card-hover {
  @extend %card-base;
  @include card-hover;
  cursor: pointer;
}

%card-compact {
  @include card-base;
  padding: $spacing-4;
}

// Utility Placeholders
// ==========================================================================
%clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

%visually-hidden {
  @include sr-only;
}

%no-scroll {
  overflow: hidden;
}

%smooth-scroll {
  scroll-behavior: smooth;
}

%reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

%reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

// Animation Placeholders
// ==========================================================================
%fade-in {
  @include fade-in;
}

%slide-up {
  @include slide-up;
}

%loading-spinner {
  @include pulse;
  border-radius: 50%;
  border: 2px solid $color-gray-200;
  border-top-color: $color-primary;
  animation: spin 1s linear infinite;
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}

// State Placeholders
// ==========================================================================
%is-loading {
  position: relative;
  pointer-events: none;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    @extend %loading-spinner;
  }
}

%is-disabled {
  opacity: 0.5;
  pointer-events: none;
  cursor: not-allowed;
}

%is-hidden {
  display: none !important;
}

%is-invisible {
  visibility: hidden;
}