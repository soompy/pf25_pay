// ==========================================================================
// GRID SYSTEM
// ==========================================================================

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 (-$grid-gutter / 2);
}

.col {
  flex: 1;
  padding: 0 ($grid-gutter / 2);
  
  // Auto columns
  &-auto {
    flex: 0 0 auto;
    width: auto;
  }
  
  // Fixed width columns
  @for $i from 1 through $grid-columns {
    &-#{$i} {
      flex: 0 0 auto;
      width: grid-width($i);
    }
  }
  
  // Responsive columns
  @include respond-to(sm) {
    @for $i from 1 through $grid-columns {
      &-sm-#{$i} {
        flex: 0 0 auto;
        width: grid-width($i);
      }
    }
  }
  
  @include respond-to(md) {
    @for $i from 1 through $grid-columns {
      &-md-#{$i} {
        flex: 0 0 auto;
        width: grid-width($i);
      }
    }
  }
  
  @include respond-to(lg) {
    @for $i from 1 through $grid-columns {
      &-lg-#{$i} {
        flex: 0 0 auto;
        width: grid-width($i);
      }
    }
  }
  
  @include respond-to(xl) {
    @for $i from 1 through $grid-columns {
      &-xl-#{$i} {
        flex: 0 0 auto;
        width: grid-width($i);
      }
    }
  }
}

// CSS Grid system
.grid {
  display: grid;
  gap: $grid-gutter;
  
  &-cols-1 { grid-template-columns: repeat(1, 1fr); }
  &-cols-2 { grid-template-columns: repeat(2, 1fr); }
  &-cols-3 { grid-template-columns: repeat(3, 1fr); }
  &-cols-4 { grid-template-columns: repeat(4, 1fr); }
  &-cols-5 { grid-template-columns: repeat(5, 1fr); }
  &-cols-6 { grid-template-columns: repeat(6, 1fr); }
  &-cols-12 { grid-template-columns: repeat(12, 1fr); }
  
  // Responsive grid columns
  @include respond-to(sm) {
    &-cols-sm-1 { grid-template-columns: repeat(1, 1fr); }
    &-cols-sm-2 { grid-template-columns: repeat(2, 1fr); }
    &-cols-sm-3 { grid-template-columns: repeat(3, 1fr); }
    &-cols-sm-4 { grid-template-columns: repeat(4, 1fr); }
    &-cols-sm-6 { grid-template-columns: repeat(6, 1fr); }
  }
  
  @include respond-to(md) {
    &-cols-md-1 { grid-template-columns: repeat(1, 1fr); }
    &-cols-md-2 { grid-template-columns: repeat(2, 1fr); }
    &-cols-md-3 { grid-template-columns: repeat(3, 1fr); }
    &-cols-md-4 { grid-template-columns: repeat(4, 1fr); }
    &-cols-md-6 { grid-template-columns: repeat(6, 1fr); }
  }
  
  @include respond-to(lg) {
    &-cols-lg-1 { grid-template-columns: repeat(1, 1fr); }
    &-cols-lg-2 { grid-template-columns: repeat(2, 1fr); }
    &-cols-lg-3 { grid-template-columns: repeat(3, 1fr); }
    &-cols-lg-4 { grid-template-columns: repeat(4, 1fr); }
    &-cols-lg-5 { grid-template-columns: repeat(5, 1fr); }
    &-cols-lg-6 { grid-template-columns: repeat(6, 1fr); }
  }
  
  // Grid gap utilities
  &-gap-0 { gap: 0; }
  &-gap-2 { gap: $spacing-2; }
  &-gap-4 { gap: $spacing-4; }
  &-gap-6 { gap: $spacing-6; }
  &-gap-8 { gap: $spacing-8; }
}

// Grid item utilities
.col-span-1 { grid-column: span 1; }
.col-span-2 { grid-column: span 2; }
.col-span-3 { grid-column: span 3; }
.col-span-4 { grid-column: span 4; }
.col-span-5 { grid-column: span 5; }
.col-span-6 { grid-column: span 6; }
.col-span-full { grid-column: 1 / -1; }

.row-span-1 { grid-row: span 1; }
.row-span-2 { grid-row: span 2; }
.row-span-3 { grid-row: span 3; }
.row-span-4 { grid-row: span 4; }
.row-span-full { grid-row: 1 / -1; }

// Auto-fit and auto-fill grids
.grid-auto-fit {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.grid-auto-fill {
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
}